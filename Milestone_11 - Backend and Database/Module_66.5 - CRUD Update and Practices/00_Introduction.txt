Module 66_5



নোড, মঙ্গোতে ভালো করার তিনটা সিক্রেট (মডিউল ৬৬.৫)

#module_release #backend_database #module_66_5

নোড-মঙ্গোতে ভালো করার তিনটা সিক্রেট-- প্রাকটিস, প্রাকটিস, প্রাকটিস। এই তিনটা কাজ করতে না পারলে অন্তত প্রাকটিস প্রাকটিস (দুই বার প্রাকটিস করো)। গতকালের সেইম কাজটাই আরেকবার প্রাকটিস করো। প্রাকটিস করতে গিয়ে নতুন এঙ্গেলে নতুন প্রশ্ন আসবে তোমার মনে। সেই প্রশ্ন আমাদের জিজ্ঞেস করো। সেটা বুঝে নাও। তবে মেইন জিনিস হচ্ছে সিলি মিসটেক আর এরর খাওয়া। প্রাকটিস করতে গেলে এই মিসটেক তুমি আগে আগে খেয়ে যাবে। আগে আগে বুঝতে পারবে। তাহলে ফিউচারের জন্য তোমার কনফিডেন্স শক্ত হবে। একজন ভালো ডেভেলপার হওয়ার জন্য ব্যাকএন্ড বা সার্ভার এর বেসিক নলেজ অনেক অনেক বেশি গুরুত্বপূর্ণ। 



.



তাই প্রথমেই গতকালের মডিউল (মডিউল ৬৪) আরেকবার প্রাকটিস করবে। জাস্ট নিজে নিজে বুঝে বুঝে করার চেষ্টা করবে। এবং করতে গেলে এরর খেয়ে যাবে। সেটা খুবই গুরুত্বপূর্ণ। 



.



নোড মঙ্গো CRUD অপারেশন চেকলিস্ট। 

১. এক্সপ্রেস দিয়ে নোড এর একটা সার্ভার তৈরি করবে। (পাঁচটা স্টেপে)

২. ডাটাবেজ এর সাথে কানেক্ট করবে। চেক করে দেখবে ঠিক আছে কিনা। এইটা ঠান্ডা মাথায় করতে হবে। 

৩. একটা API তৈরি করবে। post এর API যেটা দিয়ে ডাটা তুমি ডাটাবেজে সেন্ড করতে পারবে। এইখানে cors এবং express.json কে middleware হিসেবে ইউজ করা গুরুত্বপূর্ণ। 

৪. একটা সিম্পল React এপ্লিকেশন তৈরি করো। সেখানে রাউটার থাকবে। এবং একটা রাউট হবে addProducts নামে। সেই রাউট এ একটা ফর্ম থাকবে। সেটা সিম্পল html এর ফর্ম হতে পারে। react-bootstrap এর ফর্ম হতে পারে। বা react hook form হতে পারে। যেটাই হোক না কেন। সেখানে তিনটা ফিল্ড থাকবে। প্রোডাক্টের নাম, দাম এবং কোয়ান্টিটি। এরপর সেখান থেকে সাবমিট করলে সেই ডাটা সার্ভার হয়ে ডাটাবেজে গিয়ে সেইভ হবে। [ কি মজা !!!] অর্থাৎ তুমি CRUD এর C ইমপ্লিমেন্ট করে ফেলবে।



.

৫. তোমার রিএক্ট এপ্লিকেশনে আরেকটা রাউট তৈরি করো manageProducts । সেখানে তোমার ডাটাবেজে যে যে প্রোডাক্টস আছে সেগুলা তুমি লোড করে দেখাবে। অর্থাৎ তোমার একটা API ক্রিয়েট করতে হবে সার্ভারে। তারপর সেখান থেকে তুমি সব products এর ডাটা লোড করে UI তে দেখাবে। অর্থাৎ তুমি CRUD এর R ইমপ্লিমেন্ট করে ফেলবে। 

৬. প্রত্যেকটা প্রোডাক্ট এ ডিলিট করার একটা বাটন থাকবে। সেখানে ডিলিট করলে সেই প্রোডাক্ট তোমার ডাটাবেজ থেকে ডিলিট হয়ে যাবে। অর্থাৎ এইটা করার জন্য তোমাকে delete এর একটা API তৈরি করতে হবে। এতে তোমার CRUD এর D ইমপ্লিমেন্ট করার প্রাকটিস হয়ে যাবে।

.



৭.তোমার রিএক্ট এপ্লিকেশনে আরেকটা রাউট তৈরি করো। যেখানে প্রোডাক্ট আপডেট করা হবে। তুমি manageProducts এ প্রত্যেকটা product এর সাথে একটা করে update নামের বাটন যোগ করো। তারপর সেই বাটনে ক্লিক করলে ডাইনামিকভাবে সেই প্রোডাক্ট update করার রাউট এ যাবে। 

৮. এই রাউট এ ডাইনামিক id অনুসারে সেই প্রোডাক্ট এর ডাটা লোড করো। এইটার জন্য তোমাকে আরেকটা API তৈরি করতে হবে। যেখানে তুমি একটা id দিলে সেই প্রোডাক্ট এর ডাটা নিয়ে আসবে। তারপর সেই প্রোডাক্ট এর কিছু ডাটা দেখাবে। 

৯. প্রোডাক্ট আপডেট করার রাউটে একটা ফর্ম তৈরি করো। এবং আগের ষ্টেপের লোড করা ডাটা এই ফর্মে দেখাও। এবং সেই ডাটা যাতে আপডেট করতে পারবে। সেই সিস্টেম সেট করো। যাতে প্রোডাক্ট আপডেট করতে পারো। 

১০. প্রোডাক্ট আপডেট করো। অর্থাৎ আপডেট করা ডাটা সার্ভার হয়ে ডাটাবেজে সেইভ হয়ে যাবে। এবং তুমি ম্যানেজ প্রোডাক্টস রাউট এ গিয়েই আপডেট করা তথ্য দেখতে পারবে। এতে তোমার CRUD এর U এর কাজ করা প্রাকটিস হয়ে যাবে। 



----

এক্সট্রা চ্যালেঞ্জ: 

১১. পারলে react hook form ইউজ করো 

১২. চেষ্টা করো axios দিয়ে post রিকুয়েস্ট সেন্ড করতে। মজা পাবে। 

.



অর্থাৎ তুমি নিজেই নিজেই একটা CRUD অপারেশন এর প্রাকটিস করে ফেলবে। সাথে সাথে একটা প্রোডাক্ট ম্যানেজ করার সিস্টেম তোমার জানা হয়ে গেলো। এই জিনসিটা তোমার জন্য খুবই ভালো হবে। নেক্সট এসাইনমেন্ট এও কাজে লাগবে। SCIC তে লাগবে। ইন্টারভিউ দিতে গেলে লাগবে। চাকরি করতে গেলে লাগবে। সো, নো ফাঁকিবাজি !!!



.



আগামীকাল আবার CRUD অপারেশন Recap করা হবে। ডিফারেন্ট আরেকটা উদাহরণ দিয়ে। 

